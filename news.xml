<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title type="text" xml:lang="en">Fortran Newsletter</title>
    <link type="application/atom+xml" href="https://fortran-lang.org/news.xml" rel="self"/>
    <link type="text" href="https://fortran-lang.org/news" rel="alternate"/>
    <updated>2021-02-16T18:17:42+00:00</updated>
    <id>/news</id>
    <author>
        <name></name>
    </author>

    
    <entry>
        <title>Fortran newsletter: February 2021</title>
        <link href="https://fortran-lang.org/newsletter/2021/02/01/Fortran-Newsletter-February-2021/"/>
        <updated>2021-02-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2021/02/01/Fortran-Newsletter-February-2021</id>
        <content type="html">&lt;p&gt;Welcome to the February 2021 edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;This month we’ve had a few updates to the website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/190&quot;&gt;#190&lt;/a&gt;:
Add links to fpm contributing guidelines&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/191&quot;&gt;#191&lt;/a&gt; (WIP):
Fix author/maintainer output in fpm registry&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/187&quot;&gt;#187&lt;/a&gt; (WIP):
Correct compiler page and tutorial regarding Intel oneAPI and PGI to NVIDIA&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues/174&quot;&gt;#174&lt;/a&gt; (WIP):
We are searching for a representative Fortran code snippet for the website and are looking forward to suggestions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/master/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/303&quot;&gt;#303&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/301&quot;&gt;#301&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/294&quot;&gt;#294&lt;/a&gt;:
Fixes and improvements for the manual Makefile build&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/293&quot;&gt;#293&lt;/a&gt;:
Write a more verbose introduction to building stdlib&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/291&quot;&gt;#291&lt;/a&gt;:
Export package files (CMake and pkg-config)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/290&quot;&gt;#290&lt;/a&gt;:
Rename CMake project from stdlib to fortran_stdlib&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/288&quot;&gt;#288&lt;/a&gt;:
Follow GNU install conventions&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/284&quot;&gt;#284&lt;/a&gt;:
Required changes to be able to use &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt; as a subproject in CMake&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;CMake example&lt;/a&gt;:
Integration of the Fortran standard library in CMake projects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/304&quot;&gt;#304&lt;/a&gt; (WIP):
Add supported compilers MinGW 8, 9, 10&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/269&quot;&gt;#269&lt;/a&gt; (WIP):
Implementation of a module for handling lists of strings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/271&quot;&gt;#271&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/272&quot;&gt;#272&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/273&quot;&gt;#273&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/276&quot;&gt;#276&lt;/a&gt; (WIP),
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP):
Implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_stats_distribution&lt;/code&gt; modules.
It provides probability distribution and statistical functions.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP):
Initial implementation of sparse matrices.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don’t hesitate to test and review these pull requests!&lt;/p&gt;

&lt;p&gt;Otherwise, ongoing discussions continue about usability of &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;
(&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/7&quot;&gt;#7&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/215&quot;&gt;#215&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/279&quot;&gt;#279&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/280&quot;&gt;#280&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/285&quot;&gt;#285&lt;/a&gt;),
and new implementations for &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;
(&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/135&quot;&gt;#135&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/212&quot;&gt;#212&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/234&quot;&gt;#234&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/241&quot;&gt;#241&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/258&quot;&gt;#258&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/259&quot;&gt;#259&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/262&quot;&gt;#262&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/268&quot;&gt;#268&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/277&quot;&gt;#277&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/342&quot;&gt;#342&lt;/a&gt;:
Fix broken link in contributing guidelines&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/337&quot;&gt;#337&lt;/a&gt;:
Allow hyphens in fpm project names in “fpm new”&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/335&quot;&gt;#335&lt;/a&gt;:
Fix: performance regression&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/334&quot;&gt;#334&lt;/a&gt;:
Remove a name clash in the fpm testsuite&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/milestone/1&quot;&gt;First beta release&lt;/a&gt; (WIP):
First feature-complete release of the Fortran implementation.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/230&quot;&gt;#230&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/261&quot;&gt;#261&lt;/a&gt; (WIP):
Specification of the fpm CLI.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/316&quot;&gt;#316&lt;/a&gt; (WIP):
Update subcommand “new” to reflect the addition of support for examples&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/345&quot;&gt;#345&lt;/a&gt; (WIP):
Update: fpm_backend with dynamic openmp scheduling&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/master/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm, and the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/master/manifest-reference.md&quot;&gt;manifest reference&lt;/a&gt; to learn what are all the things that you can specify in the fpm.toml file.&lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;classic-flang&quot;&gt;Classic Flang&lt;/h3&gt;

&lt;p&gt;There are a number of pull requests out for evaluation.&lt;/p&gt;

&lt;p&gt;A total of 12 pull requests were merged in January.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/932&quot;&gt;PR#932 Do not assume unempty derived types&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/957&quot;&gt;PR#957 Support Prefetch Directive&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/947&quot;&gt;PR#947 Fix gcc-10 compilaton issues&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/948&quot;&gt;PR#948 Expand CI to run with GCC-9/10 and LLVM-9/10/11&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/949&quot;&gt;PR#949 USE rename should check if renamed sptr is available in the scope&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/971&quot;&gt;PR#971 Remove dwarfdump_prolog.f90 test since it is dependent on codegen&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/940&quot;&gt;PR#940 Flang should generate debug location for limited instructions in prolog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/977&quot;&gt;PR#977 Update apt data before installing sphinx&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/751&quot;&gt;PR#751 Fix for len intrinsic returning int*8 in some cases&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/956&quot;&gt;PR#956 Minor FileCheck pattern fixes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/978&quot;&gt;PR#978 Fix the readme to point to the correct flang-dev list&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/979&quot;&gt;PR#979 Rename direct header to avoid windows conflict&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;llvm-flang&quot;&gt;LLVM Flang&lt;/h3&gt;

&lt;p&gt;Recent development updates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OpenMP semantic checks: private, firstprivate, lastprivate, Workshare Construct, &lt;code class=&quot;highlighter-rouge&quot;&gt;DO&lt;/code&gt; loop restrictions&lt;/li&gt;
  &lt;li&gt;Detect call to abstract interface&lt;/li&gt;
  &lt;li&gt;OpenMP - add task_reduction clause, make reduction clause part of OmpClause&lt;/li&gt;
  &lt;li&gt;New Driver - adding support for various options, testing improvements, standard macro pre-definitions, fixed-form detection, CMake improvements&lt;/li&gt;
  &lt;li&gt;OpenACC - semantic checks to enforce declare directive restrictions&lt;/li&gt;
  &lt;li&gt;Internal subprogram improvements&lt;/li&gt;
  &lt;li&gt;OpenMP/OpenACC - Extend CheckNoBranching to handle branching provided by LabelEnforce&lt;/li&gt;
  &lt;li&gt;Disallow &lt;code class=&quot;highlighter-rouge&quot;&gt;INTENT&lt;/code&gt; attribute on procedure dummy arguments&lt;/li&gt;
  &lt;li&gt;Module file improvements and bug fixes&lt;/li&gt;
  &lt;li&gt;Add tests for procedure arguments with implicit interfaces&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Call notes will be sent to the &lt;em&gt;flang-dev&lt;/em&gt; email list and also recorded &lt;a href=&quot;https://docs.google.com/document/d/10T-S2J3GrahpG4Ooif93NSTz2zBW0MQc_RlwHi0-afY&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We had our 8th Fortran Monthly call on January 19.
You can watch the recording below:&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/QfiBUAgI3kw&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;This year fortran-lang will be applying as a mentor organisation for &lt;a href=&quot;https://summerofcode.withgoogle.com/&quot;&gt;Google Summer of Code&lt;/a&gt;.
We have started working on the application and the project ideas; you can join the ongoing discussion &lt;a href=&quot;https://fortran-lang.discourse.group/t/google-summer-of-code-2021/658&quot;&gt;here&lt;/a&gt;.
If you’d like to help us flesh out the ideas, or have a project idea of your own, please join our upcoming video calls on February 9 and 16 (call info will be posted in the Discourse thread), or write directly in the Discourse thread.
If you’re a student, or know students who are &lt;a href=&quot;https://developers.google.com/open-source/gsoc/faq#what_are_the_eligibility_requirements_for_participation&quot;&gt;eligible to participate&lt;/a&gt;, and you’d like to help build the Fortran ecosystem please reach out and let us know.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib-cmake-example&quot;&gt;fortran-lang/stdlib-cmake-example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;January 01 2021&quot; data-enddate=&quot;January 31 2021&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: January 2021</title>
        <link href="https://fortran-lang.org/newsletter/2021/01/01/Fortran-Newsletter-January-2021/"/>
        <updated>2021-01-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2021/01/01/Fortran-Newsletter-January-2021</id>
        <content type="html">&lt;p&gt;Happy New Year!
Welcome to the January 2021 edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;This month we’ve had a few updates to the website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/178&quot;&gt;#178&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/188&quot;&gt;#188&lt;/a&gt;:
Fix build preview&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/179&quot;&gt;#179&lt;/a&gt;:
Fix word spelling error in quickstart page&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/173&quot;&gt;#173&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/180&quot;&gt;#180&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/186&quot;&gt;#186&lt;/a&gt;:
Add missing packages from the list of popular Fortran projects to the package index&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/182&quot;&gt;#182&lt;/a&gt;:
Update compilers page following Intel oneAPI release&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/160&quot;&gt;#160&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/171&quot;&gt;#171&lt;/a&gt;:
In-depth introduction for Fortran with Make.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/187&quot;&gt;#187&lt;/a&gt; (WIP):
Correct compiler page and tutorial regarding Intel oneAPI and PGI to NVIDIA&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues/174&quot;&gt;#174&lt;/a&gt; (WIP):
We are searching for a representative Fortran code snippet for the website and are looking forward to suggestions.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/190&quot;&gt;#190&lt;/a&gt; (WIP):
Add links to fpm contributing guidelines&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/master/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/256&quot;&gt;#256&lt;/a&gt;: Add the method &lt;code class=&quot;highlighter-rouge&quot;&gt;log_debug&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_logger&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/257&quot;&gt;#257&lt;/a&gt;: Improve CMake check for F18 error stop&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/260&quot;&gt;#260&lt;/a&gt;: Add Intel oneAPI Fortran compiler to CI&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/261&quot;&gt;#261&lt;/a&gt;: Add a level option to ignore logging messages&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/263&quot;&gt;#263&lt;/a&gt;, 
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/267&quot;&gt;#267&lt;/a&gt;: Minor fixes to CI&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/270&quot;&gt;#270&lt;/a&gt;: Add GFortran 10 to CI&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/275&quot;&gt;#275&lt;/a&gt;: Add MSYS2 systems to Windows CI&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/282&quot;&gt;#282&lt;/a&gt;: Add a note about memory issues when compiling stdlib with the support of arrays to up 15 ranks&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/283&quot;&gt;#283&lt;/a&gt;: Improve the compilation load by splitting submodules&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/269&quot;&gt;#269&lt;/a&gt; (WIP): Implementation of a module for handling lists of strings&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/271&quot;&gt;#271&lt;/a&gt; (WIP),
 &lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/272&quot;&gt;#272&lt;/a&gt; (WIP),
 &lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/273&quot;&gt;#273&lt;/a&gt; (WIP),
 &lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/276&quot;&gt;#276&lt;/a&gt; (WIP),
 &lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/278&quot;&gt;#278&lt;/a&gt; (WIP): Implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_stats_distribution&lt;/code&gt; modules. It provides probability distribution and statistical functions.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/284&quot;&gt;#284&lt;/a&gt; (WIP): Required changes to be able to use &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt; as a subproject in CMake&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt; (WIP): Initial implementation of sparse matrices.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don’t hesitate to test and review these pull requests!&lt;/p&gt;

&lt;p&gt;Otherwise, ongoing discussions continue about usability of &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;
(&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/7&quot;&gt;#7&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/215&quot;&gt;#215&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/279&quot;&gt;#279&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/280&quot;&gt;#280&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/285&quot;&gt;#285&lt;/a&gt;),
and new implementations for &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;
(&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/135&quot;&gt;#135&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/212&quot;&gt;#212&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/234&quot;&gt;#234&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/241&quot;&gt;#241&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/258&quot;&gt;#258&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/259&quot;&gt;#259&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/262&quot;&gt;#262&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/268&quot;&gt;#268&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/277&quot;&gt;#277&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/releases/tag/v0.1.3&quot;&gt;Alpha release version 0.1.3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/marketplace/actions/setup-fpm&quot;&gt;setup-fpm action&lt;/a&gt;:
GitHub Action to setup the Fortran Package Manager on Ubuntu, MacOS and Windows runners&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/discussions&quot;&gt;Discussion board&lt;/a&gt;:
For questions &amp;amp; answers, sharing of ideas, showing off projects and, of course, discussions around fpm&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/248&quot;&gt;#248&lt;/a&gt;:
Refactor backend for incremental rebuilds&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/251&quot;&gt;#266&lt;/a&gt;:
Dependency management and &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm update&lt;/code&gt; subcommand&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/255&quot;&gt;#255&lt;/a&gt;
Setting the compiler and specifying test or app target&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/262&quot;&gt;#262&lt;/a&gt;:
Add -fcoarray=single to default gfortran flags&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/257&quot;&gt;#257&lt;/a&gt;:
Implement &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm install&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/260&quot;&gt;#260&lt;/a&gt;:
Fix CI to test release build&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/267&quot;&gt;#267&lt;/a&gt;:
Fix enumeration of non-library link objects&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/268&quot;&gt;#268&lt;/a&gt;:
Fix dependency tracking issue in bootstrap version&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/271&quot;&gt;#271&lt;/a&gt;:
Fix Windows run and test commands&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/273&quot;&gt;#273&lt;/a&gt;:
Update developer documentation (manifest + command line)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/274&quot;&gt;#274&lt;/a&gt;:
Update README with link to setup-fpm github action.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/280&quot;&gt;#280&lt;/a&gt;:
Create specification for example section&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/281&quot;&gt;#281&lt;/a&gt;:
Cleanup: Remove archived Rust prototype&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/284&quot;&gt;#284&lt;/a&gt;:
Document model and backend for developers&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/285&quot;&gt;#285&lt;/a&gt;:
CI: update naming of release binaries&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/286&quot;&gt;#286&lt;/a&gt;:
Implement check for duplicated program names&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/289&quot;&gt;#289&lt;/a&gt;:
Add support for same compilers as Fortran version to Haskell version&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/291&quot;&gt;#291&lt;/a&gt;:
Initial implementation of &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm build --show-model&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/292&quot;&gt;#292&lt;/a&gt;:
Specify the correct help for &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm run -h&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/293&quot;&gt;#293&lt;/a&gt;:
Fix: missing error check after &lt;code class=&quot;highlighter-rouge&quot;&gt;new_package&lt;/code&gt; call&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/294&quot;&gt;#294&lt;/a&gt;:
Add: support for detecting .f and .F files&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/300&quot;&gt;#300&lt;/a&gt;:
Remove -coarray=single option from ifort compiler default options&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/303&quot;&gt;#303&lt;/a&gt;:
Fixes to source parsing&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/304&quot;&gt;#304&lt;/a&gt;:
Remove note on not supported dependencies in program targets&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/307&quot;&gt;#307&lt;/a&gt;:
Fix: program object file collision&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/315&quot;&gt;#315&lt;/a&gt;:
Remove: -ffast-math in gfortran default release flags&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/322&quot;&gt;#322&lt;/a&gt;:
Group sources by package in the model&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/milestone/1&quot;&gt;First beta release&lt;/a&gt; (WIP):
First feature-complete release of the Fortran implementation.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/230&quot;&gt;#230&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/261&quot;&gt;#261&lt;/a&gt; (WIP):
Specification of the fpm CLI.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/316&quot;&gt;#316&lt;/a&gt; (WIP):
Update subcommand “new” to reflect the addition of support for examples&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/master/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm, and the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/master/manifest-reference.md&quot;&gt;manifest reference&lt;/a&gt; to learn what are all the things that you can specify in the fpm.toml file.&lt;/li&gt;
  &lt;li&gt;Browse existing &lt;em&gt;fpm&lt;/em&gt; packages on the &lt;a href=&quot;https://fortran-lang.org/packages/fpm&quot;&gt;fortran-lang website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;classic-flang&quot;&gt;Classic Flang&lt;/h3&gt;

&lt;p&gt;There are several pull requests out for evaluation.&lt;/p&gt;

&lt;p&gt;Only one pull request was merged in December:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/951&quot;&gt;PR#951 Fix for ICE in atomic instruction generation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;llvm-flang&quot;&gt;LLVM Flang&lt;/h3&gt;

&lt;p&gt;Alexis-Perry Holby (aperry@lanl.gov) has taken over the Flang biweekly calls.
An invitation was sent to the &lt;em&gt;flang-dev&lt;/em&gt; LLVM email list on December 22nd.
Call notes will be sent to the &lt;em&gt;flang-dev&lt;/em&gt; email list and also recorded &lt;a href=&quot;https://docs.google.com/document/d/10T-S2J3GrahpG4Ooif93NSTz2zBW0MQc_RlwHi0-afY&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Recent development updates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Semantic analysis fix for index-names of &lt;code class=&quot;highlighter-rouge&quot;&gt;FORALL&lt;/code&gt; statements&lt;/li&gt;
  &lt;li&gt;Continued work on parser support for &lt;code class=&quot;highlighter-rouge&quot;&gt;ALLOCATE&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Build tidying&lt;/li&gt;
  &lt;li&gt;OpenMP semantic checks: atomic, flush&lt;/li&gt;
  &lt;li&gt;Continued work on new driver&lt;/li&gt;
  &lt;li&gt;Fix for list-directed REAL output editing&lt;/li&gt;
  &lt;li&gt;Bug fixes: USE of USE of generic, crash in folding (#48437), crash in OpenMP semantic check (#48308), &lt;code class=&quot;highlighter-rouge&quot;&gt;IMPLICIT_NONE(EXTERNAL)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Implement &lt;code class=&quot;highlighter-rouge&quot;&gt;STORAGE_SIZE()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;SIZEOF()&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;C_SIZEOF()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;OpenACC: update serial construct clauses for 3.1, enforce restriction on routine directive and clauses&lt;/li&gt;
  &lt;li&gt;OpenMP: adding important clauses to OmpClause, task reduction clause&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We had our 7th Fortran Monthly call on December 15.
You can watch the recording below:&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/S_xQCSRlefE&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://adspthepodcast.com/2021/01/01/Episode-6.html&quot;&gt;Episode 6&lt;/a&gt; of the
Algorithms+Data Structures=Programs (ADSP) Podcast discussed Fortran and
the recent fortran-lang developments.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/modern-fortran/first-year-of-fortran-lang-d8796bfa0067&quot;&gt;First year of Fortran-lang&lt;/a&gt; by Milan Curcic.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/setup-fpm&quot;&gt;fortran-lang/setup-fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;December 01 2020&quot; data-enddate=&quot;December 31 2020&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: December 2020</title>
        <link href="https://fortran-lang.org/newsletter/2020/12/01/Fortran-Newsletter-December-2020/"/>
        <updated>2020-12-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/12/01/Fortran-Newsletter-December-2020</id>
        <content type="html">&lt;p&gt;Welcome to the December 2020 edition of the monthly Fortran newsletter.
The newsletter comes out at the beginning of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;This month we’ve had a few updates to the website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/156&quot;&gt;#156&lt;/a&gt;:
Updates to the mini-book on building Fortran programs, including the addition of
short guides on Meson and CMake.
You can read the mini-book &lt;a href=&quot;https://fortran-lang.org/learn/building_programs&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/169&quot;&gt;#169&lt;/a&gt;:
Add PSBLAS to the package index.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/160&quot;&gt;#160&lt;/a&gt; (WIP):
In-depth introduction for Fortran with Make.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/master/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/239&quot;&gt;#239&lt;/a&gt;: Implementation of bitsets in &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_bitsets&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/243&quot;&gt;#243&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/245&quot;&gt;#245&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/253&quot;&gt;#252&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/255&quot;&gt;#255&lt;/a&gt;: Various improvements to &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_logger&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/245&quot;&gt;#245&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/250&quot;&gt;#250&lt;/a&gt;: Minor fixes to the CI.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;(WIP) &lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/240&quot;&gt;#240&lt;/a&gt;: Implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_stats_distribution&lt;/code&gt; module. It provides probability distribution and statistical functions.&lt;/li&gt;
  &lt;li&gt;(WIP) &lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt;: Initial implementation of sparse matrices.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don’t hesitate to test and review these pull requests!&lt;/p&gt;

&lt;p&gt;Otherwise, ongoing discussions continue:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/220&quot;&gt;#220&lt;/a&gt;: API for file system operations: directory manipulation&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/241&quot;&gt;#241&lt;/a&gt;: Include a &lt;code class=&quot;highlighter-rouge&quot;&gt;split&lt;/code&gt; function (202X feature)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/254&quot;&gt;#254&lt;/a&gt;: Proposition to add a logger for debug phases and levels among the different logs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/259&quot;&gt;#259&lt;/a&gt;: Update the instructions for building from source in README.md.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/246&quot;&gt;#246&lt;/a&gt;: Automated binary releases in CI.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/233&quot;&gt;#233&lt;/a&gt;: Allow linking with external libraries.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/224&quot;&gt;#224&lt;/a&gt;: Add a reference document for the package manifest (fpm.toml).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/221&quot;&gt;#221&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/239&quot;&gt;#239&lt;/a&gt;: Runner options for test and app executables.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/220&quot;&gt;#220&lt;/a&gt;: Implement compiler and flags settings in Haskell fpm.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/209&quot;&gt;#209&lt;/a&gt;:
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/237&quot;&gt;#237&lt;/a&gt;: Developer API docs.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/216&quot;&gt;#216&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/225&quot;&gt;#225&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/226&quot;&gt;#226&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/229&quot;&gt;#229&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/236&quot;&gt;#236&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/240&quot;&gt;#240&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/240&quot;&gt;#247&lt;/a&gt;: Other fixes and improvements.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/milestone/1&quot;&gt;First beta release&lt;/a&gt; (WIP): First feature-complete release of the Fortran implementation.&lt;/li&gt;
  &lt;li&gt;(WIP) &lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/230&quot;&gt;#230&lt;/a&gt;,
      &lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/261&quot;&gt;#261&lt;/a&gt;: Specification of the fpm CLI.&lt;/li&gt;
  &lt;li&gt;(WIP) &lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/232&quot;&gt;#232&lt;/a&gt;: Allowing the &lt;code class=&quot;highlighter-rouge&quot;&gt;extra&lt;/code&gt; section in fpm.toml.&lt;/li&gt;
  &lt;li&gt;(WIP) &lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/248&quot;&gt;#248&lt;/a&gt;: Refactor backend for incremental rebuilds.&lt;/li&gt;
  &lt;li&gt;(WIP) &lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/251&quot;&gt;#251&lt;/a&gt;: Dependency management.&lt;/li&gt;
  &lt;li&gt;(WIP) &lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/255&quot;&gt;#255&lt;/a&gt;: Setting the compiler and specifying test or app target.&lt;/li&gt;
  &lt;li&gt;(WIP) &lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/257&quot;&gt;#257&lt;/a&gt;: Implement &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm install&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;(WIP) &lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/260&quot;&gt;#260&lt;/a&gt;: Fix CI to test release build.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm&lt;/code&gt; is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use it and let us know what you think! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/master/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm, and the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/master/manifest-reference.md&quot;&gt;manifest reference&lt;/a&gt; to learn what are all the things that you can specify in the fpm.toml file.&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;classic-flang&quot;&gt;Classic Flang&lt;/h3&gt;

&lt;p&gt;We continue to evaluate and merge pull requests into Classic Flang. Recently merged pull requests into Classic Flang include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/883&quot;&gt;PR#883: Flang generated executable does not show result variable of function&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/933&quot;&gt;PR#933: Updating X-flag entries for internal command line option “-x 49”&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/939&quot;&gt;PR#939: Publish Arm’s internal documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/941&quot;&gt;PR#941: [DebugInfo] Internal subprogram variable is not accessible for printing in gdb&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/942&quot;&gt;PR#942: Implement UNROLL(n) directive&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/943&quot;&gt;PR#943: Enable github Actions for push to master and pull requests to master&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/945&quot;&gt;PR#945: libpgmath: Stop using pgstdinit.h&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/946&quot;&gt;PR#946: Call check_member() for PD_is_contiguous&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/951&quot;&gt;PR#951: Fix for ICE in atomic instruction generation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pull requests merged into the supporting projects:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/classic-flang-llvm-project/pull/5&quot;&gt;classic flang LLVM monorepo PR#5: [Driver] Reduce downstream delta&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/classic-flang-llvm-project/pull/6&quot;&gt;classic flang LLVM monorepo PR#6: Removing a few CI pipelines&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/classic-flang-llvm-project/pull/7&quot;&gt;classic flang LLVM monorepo PR#7: Github Actions added to pre-compile artifacts for flang&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/llvm/pull/87&quot;&gt;llvm mirror PR#87: Enable github actions for llvm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang-driver/pull/94&quot;&gt;flang-driver PR#94: Enable github actions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Classic Flang biweekly call has been set up to discuss issues and plans
for the next pull requests to be validated and merged. Our next calls are Wednesday, December 16 and 30, 8:00 AM Pacific time. The notes from previous calls, upcoming agenda and a link to join the call can be found
&lt;a href=&quot;https://docs.google.com/document/d/1-OuiKx4d7O6eLEJDBDKSRnSiUO2rgRR-c2Ga4AkrzOI&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;llvm-flang&quot;&gt;LLVM Flang&lt;/h3&gt;

&lt;p&gt;Work continues on LLVM Flang, concentrating on semantics, lowering and runtime. Significant contributions are being made for OpenMP and OpenACC support.&lt;/p&gt;

&lt;p&gt;In conjunction with the MLIR-based code from the &lt;em&gt;fir-dev&lt;/em&gt; fork (the Fortran IR used for lowering), Flang can compile and run most F77 programs, including the Fortran Compiler Validation Suite (FCVS).&lt;/p&gt;

&lt;p&gt;Pat McCormick is (still) working on an RFC for the merge of the lowering code
in the fir-dev fork into LLVM master. (This was interrupted by Supercomputing 2020 and other ECP duties.) The goal is to expedite this in a way that is acceptable to the Flang community, so we can do further work in the single master branch.&lt;/p&gt;

&lt;p&gt;Recent updates include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Johannes Doerfert has created a web page at https://flang.llvm.org; you can find call and Slack logistics there&lt;/li&gt;
  &lt;li&gt;Nichols Romero has an llvm-dev RFC for adding Fortran tests to the llvm-tests project: http://lists.llvm.org/pipermail/llvm-dev/2020-November/146873.html&lt;/li&gt;
  &lt;li&gt;Andzrej Warzynski has a flang-dev RFC regarding flang option names: http://lists.llvm.org/pipermail/flang-dev/2020-November/000588.html&lt;/li&gt;
  &lt;li&gt;Andzrej Warzynski has a cfe-dev RFC regarding refactoring clang to help flang driver become independent of clang: http://lists.llvm.org/pipermail/cfe-dev/2020-November/067263.html&lt;/li&gt;
  &lt;li&gt;Changed representation of CHARACTER data in type system to make more consistent with other types (for arrays)&lt;/li&gt;
  &lt;li&gt;Changed COMPLEX expression representation to provide better handling in lowering&lt;/li&gt;
  &lt;li&gt;More improvements for supporting Fortran 77 programs&lt;/li&gt;
  &lt;li&gt;Implemented runtime support for basic ALLOCATE/DEALLOCATE and further work&lt;/li&gt;
  &lt;li&gt;Continued implementation of table-driven runtime for derived types; posted documentation&lt;/li&gt;
  &lt;li&gt;Continued implementation of array expression lowering&lt;/li&gt;
  &lt;li&gt;Improved error checks on forward references&lt;/li&gt;
  &lt;li&gt;More updates to flang driver (option handling; -E can now be used to invoke just the Flang preprocessor)&lt;/li&gt;
  &lt;li&gt;OpenACC semantic checks for modifiers on enter/exit data, set directives&lt;/li&gt;
  &lt;li&gt;OpenACC lowering (enter/exit data, update, init, shutdown, wait directives)&lt;/li&gt;
  &lt;li&gt;OpenMP structure checker updates; semantic checks for copyin clause; schedule class&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Brian Friesen (Lawrence Berkeley National Laboratory) was selected to be the new Chair of PL22.3 (J3, US Standards Committee).
Brian will serve in his first term until November 2023. Congratulations, Brian!&lt;/li&gt;
  &lt;li&gt;We had our 6th Fortran Monthly call on November 17.
You can watch the recording below:&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/HI-Yhn7Q8Ko&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;November 01 2020&quot; data-enddate=&quot;November 31 2020&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: November 2020</title>
        <link href="https://fortran-lang.org/newsletter/2020/11/01/Fortran-Newsletter-November-2020/"/>
        <updated>2020-11-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/11/01/Fortran-Newsletter-November-2020</id>
        <content type="html">&lt;p&gt;Welcome to the November 2020 edition of the monthly Fortran newsletter.
The newsletter comes out on the first calendar day of every month and details
Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;This month we’ve had a few additions and improvements to the website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/152&quot;&gt;#152&lt;/a&gt;:
New mini-book on setting up the Fortran development environment.
You can read it &lt;a href=&quot;https://fortran-lang.org/learn/os_setup&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/147&quot;&gt;#147&lt;/a&gt;:
Automated posting to @fortranlang Twitter using twitter-together.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/155&quot;&gt;#155&lt;/a&gt;:
Fix for a security vulnerability reported by the GitHub Security Team.&lt;/li&gt;
  &lt;li&gt;The following packages were added to the
&lt;a href=&quot;https://fortran-lang.org/packages&quot;&gt;Package Index&lt;/a&gt;:
atomsk, ddPCM, DFTB+, DFT-D4, ELPA, ELSI, FortJSON, fypp, HANDE, libmbd, libnegf,
mpifx, NTPoly, NWChem, OpenMolcas, PoisFFT, QMD-PROGRESS, scalapackfx,
tapenade, wannier90, and xtb.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/145&quot;&gt;#145&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/146&quot;&gt;#146&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/154&quot;&gt;#154&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/158&quot;&gt;#158&lt;/a&gt;:
Minor fixes and improvements.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/160&quot;&gt;#160&lt;/a&gt; (WIP):
In-depth introduction for Fortran with Make.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/156&quot;&gt;#156&lt;/a&gt; (WIP):
Updating the mini-book on building programs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/master/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;This month progress was made on a few pull requests:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/239&quot;&gt;#239&lt;/a&gt;: Implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_bitsets&lt;/code&gt; module. It provides a bitset data type.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/240&quot;&gt;#240&lt;/a&gt;: Implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_stats_distribution&lt;/code&gt; module. It provides probability distribution and statistical functions.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/243&quot;&gt;#243&lt;/a&gt;: A proposition to support newline characters in the message provided to the logger.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don’t hesitate to test and review these pull requests!&lt;/p&gt;

&lt;p&gt;Otherwise, ongoing discussions continue;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/220&quot;&gt;#220&lt;/a&gt;: API for file system operations: directory manipulation&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/241&quot;&gt;#241&lt;/a&gt;: Include a &lt;code class=&quot;highlighter-rouge&quot;&gt;split&lt;/code&gt; function (202X feature)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;What’s new:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/213&quot;&gt;#213&lt;/a&gt;: Bootstrap fpm submodule support&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/208&quot;&gt;#208&lt;/a&gt;: Minor fixes to &lt;code class=&quot;highlighter-rouge&quot;&gt;list_files&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm_filesystem&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/206&quot;&gt;#206&lt;/a&gt;: Add installation script in &lt;code class=&quot;highlighter-rouge&quot;&gt;install.sh&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/193&quot;&gt;#193&lt;/a&gt;: Local and remote package dependencies (Fortran fpm can now build itself)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/190&quot;&gt;#190&lt;/a&gt;: Auto discovery of executables&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/189&quot;&gt;#189&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/204&quot;&gt;#204&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/203&quot;&gt;#203&lt;/a&gt;: Implement &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm new&lt;/code&gt; in Fortran fpm&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/milestone/1&quot;&gt;First beta release&lt;/a&gt; (WIP): First feature-complete release of the Fortran implementation.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/221&quot;&gt;#221&lt;/a&gt; (WIP): Test and executable runner options&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/220&quot;&gt;#220&lt;/a&gt; (WIP): Compiler and flags&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/216&quot;&gt;#216&lt;/a&gt; (WIP): Remove bashism from install.sh&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/209&quot;&gt;#209&lt;/a&gt; (WIP): Add automatic documentation for Fortran fpm&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/202&quot;&gt;#202&lt;/a&gt; (WIP): Create package manifest with toml-f build interface&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;fpm is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Try to use it. Does it work? No? Let us know! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/master/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm.&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short-term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;classic-flang&quot;&gt;Classic Flang&lt;/h3&gt;

&lt;p&gt;We continue to evaluate and merge pull requests into the original Flang
compiler again. We pulled in several changes in October.&lt;/p&gt;

&lt;p&gt;Recently merged pull requests into Classic Flang include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/660&quot;&gt;PR#660: Enable support for simd directives&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/910&quot;&gt;PR#910: Fix f90_correct tests&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/922&quot;&gt;PR#922: Fix private flag overwrite in find_def_in_most_recent_scope()&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/927&quot;&gt;PR#927: f90_correct: exclude tests failing with LLVM 10 on OpenPOWER&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/930&quot;&gt;PR#930: Fix HTML docs generation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/931&quot;&gt;PR#931: [flang2] Fix segmentation faults (#421)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/932&quot;&gt;PR#932: [flang1] Do not assume unempty derived types&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/938&quot;&gt;PR#938: [flang2] Fixing possible crash due to ivl being NULL in dinit.cpp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Classic Flang biweekly call has been set up to discuss issues and plans
for the next pull requests to be validated and merged. Our next calls will be
Wednesday, November 4 and 18, 8:00 AM Pacific time (note the time change).
The notes from previous calls, upcoming agenda and a link to join the call can be found
&lt;a href=&quot;https://docs.google.com/document/d/1-OuiKx4d7O6eLEJDBDKSRnSiUO2rgRR-c2Ga4AkrzOI&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;llvm-flang&quot;&gt;LLVM Flang&lt;/h3&gt;

&lt;p&gt;Work continues on LLVM Flang, concentrating on semantics, lowering and runtime.&lt;/p&gt;

&lt;p&gt;In conjunction with the MLIR-based code from the &lt;em&gt;fir-dev&lt;/em&gt; fork (the Fortran
IR used for lowering), Flang can compile and run most F77 programs,
including the Fortran Compiler Validation Suite (FCVS).&lt;/p&gt;

&lt;p&gt;Pat McCormick is working on an RFC for the merge of the lowering code
in the fir-dev fork into LLVM master.
The goal is to expedite this in a way that is acceptable to the Flang community,
so we can do further work in the single master branch.&lt;/p&gt;

&lt;p&gt;Arm continues to contribute changes toward a full-fledged driver for flang.&lt;/p&gt;

&lt;p&gt;AMD continues to add support for OpenMP semantics and lowering.&lt;/p&gt;

&lt;p&gt;Valentin Clement continues to contribute parsing and semantics changes for
OpenACC support.&lt;/p&gt;

&lt;p&gt;Michael Kruse continues to add support for building Flang on Windows with MSVC
to the point that he can build and test Flang on Windows.&lt;/p&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;p&gt;What’s new in LFortran:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;9 Merge Requests were merged and 5 issues fixed in October 2020&lt;/li&gt;
  &lt;li&gt;We gave LFortran
&lt;a href=&quot;https://cfp.jupytercon.com/2020/schedule/presentation/169/lfortran-interactive-llvm-based-fortran-compiler-for-modern-architectures/&quot;&gt;talk&lt;/a&gt;
at JupyterCon 2020&lt;/li&gt;
  &lt;li&gt;A prototype compiler implementation of conditional expressions for the
October 2020 Fortran Standards Committee meeting
(&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/645&quot;&gt;!645&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Better code formatting support (&lt;code class=&quot;highlighter-rouge&quot;&gt;lfortran fmt&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Improvements to AST&lt;/li&gt;
  &lt;li&gt;Capture stdout on Windows in a Jupyter notebook
(&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/642&quot;&gt;!642&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can follow LFortran on Twitter for latest updates: &lt;a href=&quot;https://twitter.com/lfortranorg&quot;&gt;@lfortranorg&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The US Fortran Standards Committee held a virtual meeting from October 12-14.
You can read the summary and the discussion &lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/185&quot;&gt;here&lt;/a&gt; and all the documents &lt;a href=&quot;https://j3-fortran.org/doc/meeting/222&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We had our 5th Fortran Monthly call on October 27.
You can watch the recording below:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/om869cZHeRU&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;October 01 2020&quot; data-enddate=&quot;October 31 2020&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: October 2020</title>
        <link href="https://fortran-lang.org/newsletter/2020/10/01/Fortran-Newsletter-October-2020/"/>
        <updated>2020-10-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/10/01/Fortran-Newsletter-October-2020</id>
        <content type="html">&lt;p&gt;Welcome to the October 2020 edition of the monthly Fortran newsletter.
The newsletter comes out on the first calendar day of every month
and details Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;This month we’ve had only one minor change to the website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/136&quot;&gt;#136&lt;/a&gt;:
Small fix in the opening sentence on the compilers page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues/117&quot;&gt;#117&lt;/a&gt;: Adding a
Benchmarks section, a new dedicated repository was created at
https://github.com/fortran-lang/benchmarks and many details have been
discussed in &lt;a href=&quot;https://github.com/fortran-lang/benchmarks/issues&quot;&gt;issues&lt;/a&gt; there.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/master/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;This month we’ve had an improvement to the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_ascii&lt;/code&gt; module,
as well as addition of logging facilities.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/238&quot;&gt;#238&lt;/a&gt;: Improvements to the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_stats&lt;/code&gt; module by adding explicit conversions.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/228&quot;&gt;#228&lt;/a&gt;: Implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_logger&lt;/code&gt; module.
It provides a global logger instance for easy use in user applications, as well as a &lt;code class=&quot;highlighter-rouge&quot;&gt;logger_type&lt;/code&gt; derived type
if multiple concurrent loggers are needed.
See the &lt;a href=&quot;https://stdlib.fortran-lang.org/page/specs/stdlib_logger.html&quot;&gt;logger specification&lt;/a&gt;
to learn more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/239&quot;&gt;#239&lt;/a&gt;: Implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_bitsets&lt;/code&gt; module. It provides a bitset data type.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/235&quot;&gt;#235&lt;/a&gt;: Improvements to the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_ascii&lt;/code&gt; module&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Otherwise, ongoing discussions continue:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/225&quot;&gt;#225&lt;/a&gt;: Name convention for derived types in stdlib&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/224&quot;&gt;#224&lt;/a&gt;: Handling and propagating errors inside stdlib&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/221&quot;&gt;#221&lt;/a&gt;: API for a bitset data type&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/201&quot;&gt;#201&lt;/a&gt;: API for file system operations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;This month has seen over a dozen additions and improvements to the Fortran implementation of fpm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/186&quot;&gt;#186&lt;/a&gt;: Implement version string validation and comparison&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/185&quot;&gt;#185&lt;/a&gt;: Update CI workflow&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/182&quot;&gt;#182&lt;/a&gt;: CLI interface to further development of subcommands&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/180&quot;&gt;#180&lt;/a&gt;: Recursive source discovery&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/178&quot;&gt;#178&lt;/a&gt;: Add more example packages&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/177&quot;&gt;#177&lt;/a&gt;: Allow selective testing of single suites and tests&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/175&quot;&gt;#175&lt;/a&gt;: Updated formatting of Markdown documents&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/174&quot;&gt;#174&lt;/a&gt;: Cache Haskell Stack build in CI&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/171&quot;&gt;#171&lt;/a&gt;: Increase test coverage of fpm manifest&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/170&quot;&gt;#170&lt;/a&gt;: Source parsing tests&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/163&quot;&gt;#163&lt;/a&gt;: Use different strategy to fetch git dependencies&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/162&quot;&gt;#162&lt;/a&gt;: Updated OS type identification&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/160&quot;&gt;#160&lt;/a&gt;: Add contributing guidelines
(you can read them &lt;a href=&quot;https://github.com/fortran-lang/fpm/CONTRIBUTING.md&quot;&gt;here&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/157&quot;&gt;#157&lt;/a&gt;: Implement reading of fpm.toml&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/155&quot;&gt;#155&lt;/a&gt;: Internal dependencies and build backend&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work in progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/193&quot;&gt;#193&lt;/a&gt; (WIP): Local path dependencies&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/190&quot;&gt;#190&lt;/a&gt; (WIP): Auto discovery of executables&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/189&quot;&gt;#189&lt;/a&gt; (WIP): Implement &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm new&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;fpm is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Try to use it. Does it work? No? Let us know! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/master/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm.&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;classic-flang&quot;&gt;Classic Flang&lt;/h3&gt;

&lt;p&gt;We continue to evaluate and merge pull requests into the original Flang
compiler again. We pulled in several changes in the past month.&lt;/p&gt;

&lt;p&gt;One important merge was support for LLVM 10,
which required the use of a new fork, the &lt;em&gt;classic-flang-llvm-project&lt;/em&gt;
fork of the LLVM monorepo. See
&lt;a href=&quot;https://github.com/flang-compiler/classic-flang-llvm-project/pull/1&quot;&gt;PR#1&lt;/a&gt;
for details.&lt;/p&gt;

&lt;p&gt;Other recently merged pull requests into Classic Flang include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/658&quot;&gt;PR#658: Fix in preprocessing for Flexi app&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/737&quot;&gt;PR#737: TRAILZ function added to the fortran compiler&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/756&quot;&gt;PR#756: Fix ICE interf:new_symbol_and_link symbol not found&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/888&quot;&gt;PR#888: flang gen-exec does not show routine variables with parameter attribute; there are multiple pull requests that this includes (details below)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/916&quot;&gt;PR#916: Fix off-by-one error in minimum integers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/flang-compiler/flang/pull/921&quot;&gt;PR#921: Correction of representation of string (character type) constants&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Classic Flang biweekly call has been set up to discuss issues and plans
for the next pull requests to be validated and merged. Our next calls will be
Wednesday, October 7 and 21, 8:30 AM Pacific time. The notes from previous
calls, upcoming agenda and a link to join the call can be found
&lt;a href=&quot;https://docs.google.com/document/d/1-OuiKx4d7O6eLEJDBDKSRnSiUO2rgRR-c2Ga4AkrzOI&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;llvm-flang&quot;&gt;LLVM Flang&lt;/h3&gt;

&lt;p&gt;Work continues on LLVM Flang, concentrating on semantics, lowering and runtime
sufficient to compile and run Fortran 77 programs.&lt;/p&gt;

&lt;p&gt;In conjunction with the MLIR-based code from the &lt;em&gt;fir-dev&lt;/em&gt; fork (the Fortran
IR used for lowering), Flang can compile and run most F77 programs,
including the Fortran Compiler Validation Suite (FCVS).
We continue to work on refactoring necessary to upstream the &lt;em&gt;fir-dev&lt;/em&gt; fork into LLVM
flang proper.&lt;/p&gt;

&lt;p&gt;Arm has contributed changes toward a full-fledged driver for flang.&lt;/p&gt;

&lt;p&gt;AMD continues to add support for OpenMP semantics and lowering.&lt;/p&gt;

&lt;p&gt;Valentin Clement continues to contribute parsing and semantics changes for
OpenACC support. This will be the topic of the next Flang Technical Community call
on Monday, October 5, 8:30 AM Pacific Time.&lt;/p&gt;

&lt;p&gt;Michael Kruse continues to add support for building Flang on Windows with MSVC.&lt;/p&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;p&gt;What’s new in LFortran:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;59 Merge Requests were merged and 3 issues fixed in September 2020&lt;/li&gt;
  &lt;li&gt;The FortranCon 2020 LFortran video now &lt;a href=&quot;https://www.youtube.com/watch?v=tW9tUxVMnzc&quot;&gt;available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;LFortran, now imlemented in C++, has surpassed the Python prototype from a
year ago&lt;/li&gt;
  &lt;li&gt;The Jupyter notebook now works as it used to with the Python prototype&lt;/li&gt;
  &lt;li&gt;A new notebook added showcasing how to visualize AST, ASR and C++ translation
in Jupyter (&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/624&quot;&gt;!624&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;X86 backend to generate direct x86-32 machine code (very fast compilation in
Debug mode)&lt;/li&gt;
  &lt;li&gt;Further parser improvements&lt;/li&gt;
  &lt;li&gt;Initial Fortran modules support&lt;/li&gt;
  &lt;li&gt;Initial support for using GFortran modules
(&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/632&quot;&gt;!632&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Better compiler error messages
(&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/617&quot;&gt;!617&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;The interactive prompt (REPL) now understands arrow keys
(&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/603&quot;&gt;!603&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can follow LFortran on Twitter for latest updates: &lt;a href=&quot;https://twitter.com/lfortranorg&quot;&gt;@lfortranorg&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We had our fourth Fortran Monthly call on September 25.
You can watch the recording below:&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/Ei6CAZblOro&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;September 01 2020&quot; data-enddate=&quot;September 30 2020&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: September 2020</title>
        <link href="https://fortran-lang.org/newsletter/2020/09/01/Fortran-Newsletter-September-2020/"/>
        <updated>2020-09-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/09/01/Fortran-Newsletter-September-2020</id>
        <content type="html">&lt;p&gt;Welcome to the September 2020 edition of the monthly Fortran newsletter.
The newsletter comes out on the first calendar day of every month
and details Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;We continued the work on the Fortran-lang website, specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/133&quot;&gt;#133&lt;/a&gt;:
Listing fpm packages on the Packages page of the website&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues/117&quot;&gt;#117&lt;/a&gt;: Adding a
Benchmarks section, a new dedicated repository was created at
https://github.com/fortran-lang/benchmarks and many details have been
discussed in &lt;a href=&quot;https://github.com/fortran-lang/benchmarks/issues&quot;&gt;issues&lt;/a&gt; there&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/master/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;There hasn’t been new stdlib development in August, however ongoing work and discussions continue:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/227&quot;&gt;#227&lt;/a&gt;: API proposal for logging facilities in stdlib&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/225&quot;&gt;#225&lt;/a&gt;: Name convention for derived types in stdlib&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/224&quot;&gt;#224&lt;/a&gt;: Handling and propagating errors inside stdlib&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/221&quot;&gt;#221&lt;/a&gt;: API for a bitset data type&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/201&quot;&gt;#201&lt;/a&gt;: API for file system operations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The candidate for file system operations to be included in stdlib is being developed by
&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt; and &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;
in &lt;a href=&quot;https://github.com/MarDiehl/stdlib_os&quot;&gt;this repository&lt;/a&gt;.
Please try it out and let us know how it works, if there are any issues, or if the API can be improved.&lt;/p&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;Ongoing work in fpm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/146&quot;&gt;#146&lt;/a&gt; (WIP): 
Implementing internal dependencies and build backend in the Fortran fpm&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;fpm is still in early development and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Try to use it. Does it work? No? Let us know! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/master/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm.&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm and submit it to the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;Registry&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;fortran-benchmarks&quot;&gt;Fortran benchmarks&lt;/h2&gt;

&lt;p&gt;We created the &lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;benchmarks repository&lt;/a&gt; with the goal to design and implement a comprehensive set of benchmarks.
The benchmarks will aim to compare the performance of various Fortran compilers, as well as the performance of canonical algorithms implemented in Fortran and different languages.
If you’d like to contribute in any way, be it the design, implementation, or testing of benchmarks, please join the ongoing discussion &lt;a href=&quot;https://github.com/fortran-lang/benchmarks/issues&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;compilers&quot;&gt;Compilers&lt;/h2&gt;

&lt;h3 id=&quot;gfortran&quot;&gt;GFortran&lt;/h3&gt;

&lt;p&gt;GFortran 10.2 has been released, a bugfix release for 10.1.
Bugs fixed include PR94361, a memory leak with finalizers.&lt;/p&gt;

&lt;p&gt;The development version of &lt;code class=&quot;highlighter-rouge&quot;&gt;gfortran&lt;/code&gt; now supports the
full OpenMP 4.5 specification.  This will be released
with GCC 11, but of course people can already download
and test it.&lt;/p&gt;

&lt;h3 id=&quot;classic-flang&quot;&gt;Classic Flang&lt;/h3&gt;

&lt;p&gt;We’re evaluating pull requests and merging them into the original Flang
compiler again. We pulled in 4 changes in the past couple of weeks, and expect
to merge in a few more each week. One upcoming change is the support for LLVM 10,
which requires the use of a new fork, the &lt;em&gt;classic-flang-llvm-project&lt;/em&gt;
fork of the LLVM monorepo. See
&lt;a href=&quot;https://github.com/flang-compiler/classic-flang-llvm-project/pull/1&quot;&gt;PR#1&lt;/a&gt;
for details.&lt;/p&gt;

&lt;p&gt;The Classic Flang biweekly call has been set up to discuss issues and plans
for the next pull requests to be validated and merged. Our next calls will be
Wednesday, September 9 and 23, 8:30 AM Pacific time. The notes from previous
calls, upcoming agenda and a link to join the call can be found
&lt;a href=&quot;https://docs.google.com/document/d/1-OuiKx4d7O6eLEJDBDKSRnSiUO2rgRR-c2Ga4AkrzOI&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;llvm-flang&quot;&gt;LLVM Flang&lt;/h3&gt;

&lt;p&gt;Work continues on LLVM Flang, concentrating on semantics, lowering and runtime
sufficient to compile and run Fortran 77 programs. We are fixing bugs we find
in running FCVS and other F77 test suites (and the F77 parts of non-F77
suites).&lt;/p&gt;

&lt;p&gt;In conjunction with the MLIR-based code from the &lt;em&gt;fir-dev&lt;/em&gt; fork (the Fortran
IR used for lowering), Flang can compile and run most F77 programs. We
continue to work on refactoring necessary to upstream this fork into LLVM
flang proper.&lt;/p&gt;

&lt;p&gt;Arm is working on changes to support a driver program to replace the temporary
driver we currently use.&lt;/p&gt;

&lt;p&gt;Valentin Clement continues to contribute parsing and semantics changes for
OpenACC support.&lt;/p&gt;

&lt;h3 id=&quot;lfortran&quot;&gt;LFortran&lt;/h3&gt;

&lt;p&gt;What’s new in LFortran:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;143 Merge Requests were merged and 22 issues fixed in August 2020&lt;/li&gt;
  &lt;li&gt;The C++ backend can now translate to C++ and compile many simple Fortran programs&lt;/li&gt;
  &lt;li&gt;The parser can now parse a large subset of Fortran (if you find something that
cannot be parsed, please &lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/issues&quot;&gt;report&lt;/a&gt; a bug). Not all the information is yet
represented in the AST (so later stages of the compiler also work on a smaller
subset), but one should not get parse errors anymore for most valid codes.&lt;/li&gt;
  &lt;li&gt;Initial &lt;code class=&quot;highlighter-rouge&quot;&gt;lfortran fmt&lt;/code&gt; subcommand for formatting Fortran files, you can
provide feedback
&lt;a href=&quot;https://fortran-lang.discourse.group/t/feedback-for-lfortran-fmt-to-format-fortran-source-code/281&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;A new command &lt;code class=&quot;highlighter-rouge&quot;&gt;lfortran kernel&lt;/code&gt; can run LFortran as a Jupyter kernel.&lt;/li&gt;
  &lt;li&gt;LFortran itself gives a nice Python like stacktrace (on Linux and macOS) in
Debug mode when an unhandled excetion happens or a segfault.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our goal for September is to get LFortran working for a much larger subset of
Fortran and allow it to compile and run via the C++ translation backend (the
LLVM backend will follow soon after).&lt;/p&gt;

&lt;p&gt;You can follow LFortran on Twitter for latest updates: &lt;a href=&quot;https://twitter.com/lfortranorg&quot;&gt;@lfortranorg&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We had our fourth Fortran Monthly call on August 20.
You can watch the recording below:&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/fiAyhHkAKFc&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of these repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fortran-lang/fpm-registry&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;fortran-lang/benchmarks&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;August 01 2020&quot; data-enddate=&quot;August 31 2020&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: August 2020</title>
        <link href="https://fortran-lang.org/newsletter/2020/08/01/Fortran-Newsletter-August-2020/"/>
        <updated>2020-08-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/08/01/Fortran-Newsletter-August-2020</id>
        <content type="html">&lt;p&gt;Welcome to the August 2020 edition of the monthly Fortran newsletter.
The newsletter comes out on the first calendar day of every month
and details Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;We continued the work on the Fortran-lang website, including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/116&quot;&gt;#116&lt;/a&gt;: updates to the Quickstart tutorial on loop control and syntax&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/120&quot;&gt;#120&lt;/a&gt;: updated the
&lt;a href=&quot;https://fortran-lang.org/learn/&quot;&gt;Book section&lt;/a&gt; with a comprehensive list of
books about Fortran&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/121&quot;&gt;#121&lt;/a&gt;, &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/122&quot;&gt;#122&lt;/a&gt;, &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/127&quot;&gt;#127&lt;/a&gt;, &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/128&quot;&gt;#128&lt;/a&gt;: additional packages added to the Fortran-lang.org &lt;a href=&quot;https://fortran-lang.org/packages&quot;&gt;packages&lt;/a&gt; page&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues/117&quot;&gt;#117&lt;/a&gt;: Adding a
Benchmarks section, a new dedicated repository was created at
https://github.com/fortran-lang/benchmarks and many details have been
discussed in &lt;a href=&quot;https://github.com/fortran-lang/benchmarks/issues&quot;&gt;issues&lt;/a&gt; there&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/master/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;What’s new in the Fortran Standard Library:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/223&quot;&gt;#223&lt;/a&gt;: the structure of the Fortran Standard Library has been modified for clarity and ease of use. With these changes, both experimental and stable procedures will reside together in the same modules. The status of the procedures (experimental vs stable) are documented in the code, in the specs, and in the &lt;a href=&quot;https://stdlib.fortran-lang.org/&quot;&gt;API docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Main ongoing discussions:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/225&quot;&gt;#225&lt;/a&gt;: Name convention for derived types in &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/224&quot;&gt;#224&lt;/a&gt;: Handling and propagating errors inside &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/221&quot;&gt;#221&lt;/a&gt;: API for a bitset data type&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/issues/201&quot;&gt;#201&lt;/a&gt;: API for file system operations&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;What’s new in fpm:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;We created the &lt;a href=&quot;https://github.com/fortran-lang/fpm-registry&quot;&gt;fpm-registry&lt;/a&gt; repository,
which serves as a registry of fpm-enabled Fortran packages.
Please see the README there to learn how to contribute a package.
For now, the registry is simply a list of fpm-enabled Fortran packages that you can use as a dependency in your &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm.toml&lt;/code&gt; file.
Soon, this registry will be used to generate detailed metadata that will be used by fpm to allow you to search for packages from the command-line, e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm search &amp;lt;package&amp;gt;&lt;/code&gt; or similar.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/issues/146&quot;&gt;#146&lt;/a&gt;: We discussed the design of the new Fortran implementation of fpm in a video call. We agreed on the need for an intermediate package model which will allow for clean separation of fpm frontends (user interface, parsing, and semantics) and fpm backends (fpm itself, CMake, Make, etc.).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/131&quot;&gt;#131&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/132&quot;&gt;#132&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/139&quot;&gt;#139&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/140&quot;&gt;#140&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/142&quot;&gt;#142&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/145&quot;&gt;#145&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/147&quot;&gt;#147&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/148&quot;&gt;#148&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/151&quot;&gt;#151&lt;/a&gt;:
We merged several pull requests toward the Fortran fpm implementation. The Haskell implementation has moved to the &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm/bootstrap&lt;/code&gt; directory, and the Fortran implementation is developed in &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm/fpm&lt;/code&gt;. The Fortran fpm is, of course, an fpm package itself so it can be built by the Haskell fpm. Soon, it will be able to be build by itself.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;fpm is still in very early development, and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Try to use it. Does it work? No? Let us know! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/master/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm.&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;fortran-benchmarks&quot;&gt;Fortran benchmarks&lt;/h2&gt;

&lt;p&gt;We created the &lt;a href=&quot;https://github.com/fortran-lang/benchmarks&quot;&gt;benchmarks repository&lt;/a&gt; with the goal to design and implement a comprehensive set of benchmarks.
The benchmarks will aim to compare the performance of various Fortran compilers, as well as the performance of canonical algorithms implemented in Fortran and different languages.
If you’d like to contribute in any way, be it the design, implementation, or testing of benchmarks, please join the ongoing discussion &lt;a href=&quot;https://github.com/fortran-lang/benchmarks/issues&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;classic-flang&quot;&gt;Classic Flang&lt;/h2&gt;

&lt;p&gt;We’ve begun to evaluate pull requests and merge them into the original Flang
compiler again. There is now a biweekly call to discuss issues and plans for
Classic Flang. The next call will be Wednesday, August 12, 8:30 AM Pacific time.
The notes from previous calls, upcoming agenda and a link to join the call can
be found &lt;a href=&quot;https://docs.google.com/document/d/1-OuiKx4d7O6eLEJDBDKSRnSiUO2rgRR-c2Ga4AkrzOI&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the last call, AMD reviewed their outstanding pull requests for Fortran debug
metadata enhancements.&lt;/p&gt;

&lt;h2 id=&quot;llvm-flang&quot;&gt;LLVM Flang&lt;/h2&gt;

&lt;p&gt;Work continues on LLVM Flang, concentrating on semantics, lowering and runtime
sufficient to compile and run Fortran 77 programs. We are fixing bugs we find in
running FCVS and other test suites that use F77.&lt;/p&gt;

&lt;p&gt;We cominue upstreaming the lowering code from the fir-dev fork (MLIR-based
Fortran IR) into the llvm-project repository. Arm is working on changes to
support a driver program to replace the throwaway driver we currently have.&lt;/p&gt;

&lt;p&gt;AMD has been contributing parser and semantic processing for OpenMP constructs
like task wait, barrier and parallel constructs.&lt;/p&gt;

&lt;p&gt;Changes have been made to default parse/unparse/compile processing to default to
gfortran (not NVIDIA Fortran).&lt;/p&gt;

&lt;p&gt;Valentin Clement has been committing initial changes for OpenACC support.&lt;/p&gt;

&lt;h2 id=&quot;lfortran&quot;&gt;LFortran&lt;/h2&gt;

&lt;p&gt;What’s new in LFortran:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The initial prototype C++ backend can translate Fortran’s &lt;code class=&quot;highlighter-rouge&quot;&gt;do concurrent&lt;/code&gt; to C++’s &lt;code class=&quot;highlighter-rouge&quot;&gt;Kokkos::parallel_for&lt;/code&gt;: &lt;a href=&quot;https://twitter.com/lfortranorg/status/1280764915242811393&quot;&gt;https://twitter.com/lfortranorg/status/1280764915242811393&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;LFortran has a Twitter account for latest updates: &lt;a href=&quot;https://twitter.com/lfortranorg&quot;&gt;@lfortranorg&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Work is progressing on the production version of LFortran that is written in C++&lt;/li&gt;
  &lt;li&gt;22 Merge Requests were merged and 4 issues fixed in July 2020. Some notable ones:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/issues/163&quot;&gt;#163&lt;/a&gt;: Implement basic Fortran to C++ translation backend&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/410&quot;&gt;!410&lt;/a&gt;: Make simple calculations work via LLVM in interactive mode&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://gitlab.com/lfortran/lfortran/-/merge_requests/402&quot;&gt;!402&lt;/a&gt;: Build ASR (Abstract Semantic Representation) properly for subroutines and functions&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short term goal is to get the C++ based production version of LFortran
matching most of the features from the Python prototype version and make a
public release. The long term goal is to build a modern Fortran compiler that
works with any production code and allows it to run efficiently on modern
hardware (CPUs and GPUs), both interactively and compiling to binaries, and
provide the basis for other tools such as the Fortran to C++ translation, editor
support, automatic documentation generation (and doctesting like in Python),
automatic formatting and others.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://tcevents.chem.uzh.ch/event/12&quot;&gt;FortranCon 2020&lt;/a&gt; was held July 2 - 4.
with many interesting talks.
See the talk schedule
&lt;a href=&quot;https://tcevents.chem.uzh.ch/event/12/timetable/#20200702.detailed&quot;&gt;here&lt;/a&gt;.
All presentations have been recorded and will be soon made available online by the FortranCon organizers.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We had our third Fortran Monthly call on July 16.
You can read watch the recording below:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/_ojLReFvjbs&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of the four repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;July 01 2020&quot; data-enddate=&quot;July 31 2020&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: July 2020</title>
        <link href="https://fortran-lang.org/newsletter/2020/07/01/Fortran-Newsletter-July-2020/"/>
        <updated>2020-07-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/07/01/Fortran-Newsletter-July-2020</id>
        <content type="html">&lt;p&gt;Welcome to the July 2020 edition of the monthly Fortran newsletter.
The newsletter comes out on the first calendar day of every month
and details Fortran news from the previous month.&lt;/p&gt;

&lt;ul id=&quot;page-nav&quot;&gt;&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;Work has continued on the Fortran-lang website, including a new community page and additional tutorial content:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/98&quot;&gt;#98&lt;/a&gt;: updated the &lt;a href=&quot;https://fortran-lang.org/learn/quickstart/derived_types&quot;&gt;Quickstart mini-book&lt;/a&gt; tutorial with a comprehensive overview of derived types;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/99&quot;&gt;#99&lt;/a&gt;: added a second mini-book tutorial to the &lt;a href=&quot;https://fortran-lang.org/learn&quot;&gt;Learn&lt;/a&gt; page on building compiled programs and libraries;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/100&quot;&gt;#100&lt;/a&gt;: added a new top-level web-page for Fortran-lang community projects.
The page gives useful information and links for new contributors, as well as acknowledging each of our many existing contributors.
Check it out at &lt;a href=&quot;https://fortran-lang.org/community&quot;&gt;https://fortran-lang.org/community&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ongoing work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues/101&quot;&gt;#101&lt;/a&gt;: Code style for Fortran examples in the tutorials.
See the corresponding community poll and discussion on &lt;a href=&quot;https://fortran-lang.discourse.group/t/should-tutorials-on-fortran-lang-org-follow-a-consistent-style-for-code-listings/134&quot;&gt;Discourse&lt;/a&gt;;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues/112&quot;&gt;#112&lt;/a&gt;: Plan for core language tutorials.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;Let us know&lt;/a&gt; if you have any suggestions for the website and its content.
We welcome any new contributors to the website and the tutorials page in particular - see the &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/blob/master/CONTRIBUTING.md&quot;&gt;contributor guide&lt;/a&gt; for how to get started.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Did you know&lt;/strong&gt; you don’t need to know HTML or any fancy languages to contribute to the website;
all of the online tutorials and most of the website content are written in &lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&quot;&gt;markdown&lt;/a&gt;, a simple markup language for formatting text - don’t worry if you haven’t used it before, it’s very easy to pick up!&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;What’s new in the Fortran Standard Library:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/209&quot;&gt;#209&lt;/a&gt;
Implements Simpson’s rule for 1-d arrays (&lt;code class=&quot;highlighter-rouge&quot;&gt;simps&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;simps_weights&lt;/code&gt;) in the
quadrature module (&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_experimental_quadrature&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/205&quot;&gt;#205&lt;/a&gt;
Tests for and improved standard conformance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some miscellaneous fixes and improvements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/208&quot;&gt;#208&lt;/a&gt;
Fixes to support Intel Fortran compilers&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/210&quot;&gt;#210&lt;/a&gt;
Fixes to support NAG compiler&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/207&quot;&gt;#207&lt;/a&gt;
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/211&quot;&gt;#211&lt;/a&gt;
Other minor fixes and improvements&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;fortran-package-manager&quot;&gt;Fortran Package Manager&lt;/h2&gt;

&lt;p&gt;What’s new in fpm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/99&quot;&gt;#99&lt;/a&gt;
fpm now lets you specify a custom build script or a Makefile to use.
This will help building packages that use a custom structure and/or external
dependencies in other languages.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/89&quot;&gt;#89&lt;/a&gt;
Allow specifying specific tests or executables to run via command-line arguments.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/85&quot;&gt;#85&lt;/a&gt;
Enables having specific dependencies for tests and executables.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/97&quot;&gt;#97&lt;/a&gt;
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/100&quot;&gt;#100&lt;/a&gt;
&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/101&quot;&gt;#101&lt;/a&gt;
Minor improvements to the README.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;fpm is still in very early development, and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Try to use it. Does it work? No? Let us know! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/master/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm.&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We had our second Fortran Monthly call on June 19.
You can read watch the recording below:&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/i-gRNGRzugc&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;As usual, subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned with the future meetings.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://tcevents.chem.uzh.ch/event/12&quot;&gt;FortranCon 2020&lt;/a&gt; began today (July 2),
with many interesting talks.
See the talk schedule &lt;a href=&quot;https://tcevents.chem.uzh.ch/event/12/timetable/#20200702.detailed&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of the four repositories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;gh-contributors&quot; data-startdate=&quot;June 01 2020&quot; data-enddate=&quot;June 30 2020&quot; height=&quot;500px&quot;&gt;&lt;/div&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: June 2020</title>
        <link href="https://fortran-lang.org/newsletter/2020/06/01/Fortran-Newsletter-June-2020/"/>
        <updated>2020-06-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/06/01/Fortran-Newsletter-June-2020</id>
        <content type="html">&lt;p&gt;Welcome to the June 2020 edition of the monthly Fortran newsletter.
The newsletter comes out on the first calendar day of every month
and details Fortran news from the previous month.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#fortran-lang.org&quot;&gt;fortran-lang.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#fortran-discourse&quot;&gt;Fortran Discourse&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#fortran-standard-library&quot;&gt;Standard Library&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#package-manager&quot;&gt;Package Manager&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#events&quot;&gt;Events&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;fortran-langorg&quot;&gt;fortran-lang.org&lt;/h2&gt;

&lt;p&gt;The Fortran website has been up since mid-April, and we’ve already got great
feedback from the community.
In the past month we’ve updated the &lt;a href=&quot;/compilers&quot;&gt;Compilers&lt;/a&gt; page which is now
comprehensive and includes all major open source and commercial compilers.
The &lt;a href=&quot;/learn&quot;&gt;Learn&lt;/a&gt; page has also seen significant updates—it’s been
reorganized for easier navigation and currently features a quickstart tutorial,
Fortran books, and other online resources.&lt;/p&gt;

&lt;p&gt;If you haven’t yet, please explore the website and &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/issues&quot;&gt;let us know&lt;/a&gt;
if you have any suggestions for improvement.
Specifically, we’ll be focusing on the &lt;a href=&quot;/learn&quot;&gt;Learn&lt;/a&gt; page and its mini-books
in the coming months.
Please help us make them better!&lt;/p&gt;

&lt;p&gt;Here are some specific items that we worked on:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/90&quot;&gt;#90&lt;/a&gt;
WIP: Mini-book on building programs&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/83&quot;&gt;#83&lt;/a&gt;
Improving the structure and navigation of the &lt;a href=&quot;/learn&quot;&gt;Learn&lt;/a&gt; pages&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org/pull/46&quot;&gt;#46&lt;/a&gt;
Build website previews from pull requests&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;fortran-discourse&quot;&gt;Fortran Discourse&lt;/h2&gt;

&lt;p&gt;On May 4 we launched the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Fortran Discourse&lt;/a&gt;, an online discussion board
for anything and everything Fortran related.
You can use it discuss the Fortran language, ask for help, announce events and/or personal projects, or just lurk
around. 
There are already quite a few interesting discussions going on.
Join us!&lt;/p&gt;

&lt;h2 id=&quot;fortran-standard-library&quot;&gt;Fortran Standard Library&lt;/h2&gt;

&lt;p&gt;Recently we launched a &lt;a href=&quot;https://stdlib.fortran-lang.org&quot;&gt;website&lt;/a&gt; for the API documentation of the Fortran Standard Library. 
The &lt;a href=&quot;https://stdlib.fortran-lang.org&quot;&gt;website&lt;/a&gt; is automaticaly generated by &lt;a href=&quot;https://github.com/Fortran-FOSS-Programmers/ford#readme&quot;&gt;FORD&lt;/a&gt;.
&lt;a href=&quot;https://stdlib.fortran-lang.org/page/contributing/CodeOfConduct.html&quot;&gt;Code of Conduct&lt;/a&gt;, &lt;a href=&quot;https://stdlib.fortran-lang.org/page/License.html&quot;&gt;licence&lt;/a&gt;, and &lt;a href=&quot;https://stdlib.fortran-lang.org/page/contributing/Workflow.html&quot;&gt;workflow&lt;/a&gt; for contributing to the Fortran Standard Library can also be found on the &lt;a href=&quot;https://stdlib.fortran-lang.org/&quot;&gt;website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here’s what’s new in the Fortran Standard Library:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/191&quot;&gt;#191&lt;/a&gt;
WIP: Function for computing Pearson correlations among elements of
an array in the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_experimental_stats&lt;/code&gt; module&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/189&quot;&gt;#189&lt;/a&gt;
WIP: Procedures for sparse matrices operations. Ongoing discussion on the API can be found
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/wiki/Stdlib-Sparse-matrix-API&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/183&quot;&gt;#183&lt;/a&gt;
Automatic API-doc generation and deployment of this &lt;a href=&quot;https://stdlib.fortran-lang.org&quot;&gt;stdlib website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/170&quot;&gt;#170&lt;/a&gt;
Addition of the new functions &lt;code class=&quot;highlighter-rouge&quot;&gt;diag&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;eye&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;trace&lt;/code&gt; functions to make working with
matrices easier.
Read the full specifications &lt;a href=&quot;https://stdlib.fortran-lang.org/page/specs/stdlib_experimental_linalg.html&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;package-manager&quot;&gt;Package Manager&lt;/h2&gt;

&lt;p&gt;In this past month support for dependencies between packages has been added
to the &lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;Fortran Package Manager (fpm)&lt;/a&gt;.
You can specify either a path to another folder on your machine with an fpm package,
or a git repository (and optionally a specific branch, tag or commit) that
contains the package. fpm will then take care of fetching the dependency for you
(if necessary) and any packages it depends on, and compiling and linking it into
your project. Check out an example &lt;a href=&quot;https://gitlab.com/everythingfunctional/hello_fpm&quot;&gt;hello world package&lt;/a&gt;
that uses this functionality.&lt;/p&gt;

&lt;p&gt;fpm is still in very early development, and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Try to use it. Does it work? No? Let us know! Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/master/PACKAGING.md&quot;&gt;fpm packaging guide&lt;/a&gt; to learn how to build your package with fpm.&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for fpm.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short term goal of fpm is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;p&gt;Specific items that are new this month:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/82&quot;&gt;#82&lt;/a&gt;
You can now add remote git repositories as Fortran dependencies to your project.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortran-lang/fpm/pull/73&quot;&gt;#73&lt;/a&gt;
Improved output messages for the user&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We hosted the very first Fortran Monthly call on May 14.
The turnout was astonishing–over 23 people joined.
You can read the notes from the call &lt;a href=&quot;https://fortran-lang.discourse.group/t/fortran-monthly-call-may-2020&quot;&gt;here&lt;/a&gt;.
We’ll have another one this month.
Subscribe to the &lt;a href=&quot;https://groups.io/g/fortran-lang&quot;&gt;mailing list&lt;/a&gt; and/or
join the &lt;a href=&quot;https://fortran-lang.discourse.group&quot;&gt;Discourse&lt;/a&gt; to stay tuned.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tcevents.chem.uzh.ch/event/12&quot;&gt;FortranCon 2020&lt;/a&gt; will take place on July 2-4 in Zurich, Switzerland.
Virtual participation is enabled for both attendees and speakers.
Registration is free and due by June 1, 2020.
There are quite a few submissions from the fortran-lang community:
A talk on &lt;a href=&quot;https://github.com/fortran-lang/talks/tree/master/FortranCon2020-stdlib&quot;&gt;stdlib&lt;/a&gt; by Jeremie Vandenplas,
one about the &lt;a href=&quot;https://github.com/fortran-lang/talks/tree/master/FortranCon2020-fpm&quot;&gt;Fortran Package Manager (fpm)&lt;/a&gt; by Brad Richardson,
a talk on &lt;a href=&quot;https://gitlab.com/lfortran/talks/fortrancon-2020-talk&quot;&gt;LFortran compiler&lt;/a&gt; by Ondřej Čertík,
as well as one about &lt;a href=&quot;https://github.com/fortran-lang/talks/tree/master/FortranCon2020-community&quot;&gt;building the Fortran community&lt;/a&gt;
by Milan Curcic.&lt;/li&gt;
  &lt;li&gt;J3/WG5 joint meeting, originally slated for October 12-16 in Las Vegas, Nevada, has been &lt;a href=&quot;https://mailman.j3-fortran.org/pipermail/j3/2020-May/012034.html&quot;&gt;cancelled&lt;/a&gt;.
However, the work on proposals for the Fortran Standard doesn’t stop.
You can submit a proposal for the Standards committee &lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;here&lt;/a&gt;.
For reference, you can read the &lt;a href=&quot;/newsletter/2020/02/28/J3-february-meeting&quot;&gt;notes from the February meeting&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;contributors&quot;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;We thank everybody who contributed to fortran-lang in the past month by
commenting in any of the four repositories
&lt;a href=&quot;https://github.com/fortran-lang/stdlib&quot;&gt;fortran-lang/stdlib&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;fortran-lang/fpm&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.org&quot;&gt;fortran-lang/fortran-lang.org&lt;/a&gt;,
&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;j3-fortran/fortran_proposals&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;Ondřej Čertík (&lt;a href=&quot;https://github.com/certik&quot;&gt;@certik&lt;/a&gt;), Milan Curcic (&lt;a href=&quot;https://github.com/milancurcic&quot;&gt;@milancurcic&lt;/a&gt;), Laurence Kedward (&lt;a href=&quot;https://github.com/LKedward&quot;&gt;@LKedward&lt;/a&gt;), Jeremie Vandenplas (&lt;a href=&quot;https://github.com/jvdp1&quot;&gt;@jvdp1&lt;/a&gt;), Brad Richardson (&lt;a href=&quot;https://github.com/everythingfunctional&quot;&gt;@everythingfunctional&lt;/a&gt;), Izaak “Zaak” Beekman (&lt;a href=&quot;https://github.com/zbeekman&quot;&gt;@zbeekman&lt;/a&gt;), Martin Diehl (&lt;a href=&quot;https://github.com/MarDiehl&quot;&gt;@MarDiehl&lt;/a&gt;), &lt;a href=&quot;https://github.com/arjenmarkus&quot;&gt;@arjenmarkus&lt;/a&gt;, Van Snyder (&lt;a href=&quot;https://github.com/vansnyder&quot;&gt;@vansnyder&lt;/a&gt;), &lt;a href=&quot;https://github.com/FortranFan&quot;&gt;@FortranFan&lt;/a&gt;, &lt;a href=&quot;https://github.com/epagone&quot;&gt;@epagone&lt;/a&gt;, Ivan (&lt;a href=&quot;https://github.com/ivan-pi&quot;&gt;@ivan-pi&lt;/a&gt;), Neil Carlson (&lt;a href=&quot;https://github.com/nncarlson&quot;&gt;@nncarlson&lt;/a&gt;), Ashwin Vishnu (&lt;a href=&quot;https://github.com/ashwinvis&quot;&gt;@ashwinvis&lt;/a&gt;), Williams A. Lima (&lt;a href=&quot;https://github.com/ghwilliams&quot;&gt;@ghwilliams&lt;/a&gt;), Peter Klausler (&lt;a href=&quot;https://github.com/klausler&quot;&gt;@klausler&lt;/a&gt;), Chris MacMackin (&lt;a href=&quot;https://github.com/cmacmackin&quot;&gt;@cmacmackin&lt;/a&gt;), Pedro Costa (&lt;a href=&quot;https://github.com/p-costa&quot;&gt;@p-costa&lt;/a&gt;), &lt;a href=&quot;https://github.com/mobius-eng&quot;&gt;@mobius-eng&lt;/a&gt;, Salvatore Filippone (&lt;a href=&quot;https://github.com/sfilippone&quot;&gt;@sfilippone&lt;/a&gt;), &lt;a href=&quot;https://github.com/ShamanTcler&quot;&gt;@ShamanTcler&lt;/a&gt;, Amit Kumar (&lt;a href=&quot;https://github.com/aktech&quot;&gt;@aktech&lt;/a&gt;), Bálint Aradi (&lt;a href=&quot;https://github.com/aradi&quot;&gt;@aradi&lt;/a&gt;), Melissa Weber Mendonça (&lt;a href=&quot;https://github.com/melissawm&quot;&gt;@melissawm&lt;/a&gt;), Jacob Williams (&lt;a href=&quot;https://github.com/jacobwilliams&quot;&gt;@jacobwilliams&lt;/a&gt;), Rohit Goswami (&lt;a href=&quot;https://github.com/HaoZeke&quot;&gt;@HaoZeke&lt;/a&gt;), Amir Shahmoradi (&lt;a href=&quot;https://github.com/shahmoradi&quot;&gt;@shahmoradi&lt;/a&gt;), Bill Long (&lt;a href=&quot;https://github.com/longb&quot;&gt;@longb&lt;/a&gt;).&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title>Fortran newsletter: May 2020</title>
        <link href="https://fortran-lang.org/newsletter/2020/05/01/Fortran-Newsletter-May-2020/"/>
        <updated>2020-05-01T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/05/01/Fortran-Newsletter-May-2020</id>
        <content type="html">&lt;div class=&quot;language-fortran highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Hello, World!'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Welcome to the first monthly Fortran newsletter.
It will come out on the first calendar day of every month, 
detailing Fortran news from the previous month.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#this-website&quot;&gt;This website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#standard-library&quot;&gt;Standard Library&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#package-manager&quot;&gt;Package Manager&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#wg5-convenor-candidates&quot;&gt;WG5 Convenor candidates&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#events&quot;&gt;Events&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#whos-hiring&quot;&gt;Who’s hiring?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;this-website&quot;&gt;This website&lt;/h2&gt;

&lt;p&gt;If you came to this newsletter from elsewhere, welcome to the new Fortran website.
We built this site mid-April and hope for it to be &lt;em&gt;the&lt;/em&gt; home of Fortran on the internet,
which traditionally there hasn’t been any to date.
Look around and &lt;a href=&quot;https://github.com/fortran-lang/fortran-lang.github.io/issues&quot;&gt;let us know&lt;/a&gt; 
if you have any suggestions for improvement.
Specifically, &lt;a href=&quot;/learn&quot;&gt;Learn&lt;/a&gt; and &lt;a href=&quot;/packages&quot;&gt;Packages&lt;/a&gt; are the pages that 
we’ll be focusing on in the coming months. 
Please help us make them better!&lt;/p&gt;

&lt;h2 id=&quot;standard-library&quot;&gt;Standard Library&lt;/h2&gt;

&lt;p&gt;Here’s what’s new in Fortran Standard Library:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/172&quot;&gt;#172&lt;/a&gt;
New function &lt;code class=&quot;highlighter-rouge&quot;&gt;cov&lt;/code&gt; in the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib_experimental_stats&lt;/code&gt; module to compute covariance of array elements.
Read the full specification &lt;a href=&quot;https://github.com/fortran-lang/stdlib/blob/master/src/stdlib_experimental_stats.md#cov---covariance-of-array-elements&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/168&quot;&gt;#168&lt;/a&gt;
Specify recommended order of attributes for dummy arguments in the 
&lt;a href=&quot;https://github.com/fortran-lang/stdlib/blob/master/STYLE_GUIDE.md&quot;&gt;Stdlib style guide&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/173&quot;&gt;#173&lt;/a&gt;
Minor bug fix.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/fortran-lang/stdlib/pull/170&quot;&gt;#170&lt;/a&gt;
WIP: Addition of &lt;code class=&quot;highlighter-rouge&quot;&gt;diag&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;eye&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;trace&lt;/code&gt; functions to make working with 
matrices easier.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;package-manager&quot;&gt;Package Manager&lt;/h2&gt;

&lt;p&gt;In the past month we’ve seen the first working implementation of the &lt;a href=&quot;https://github.com/fortran-lang/fpm&quot;&gt;Fortran Package Manager (FPM)&lt;/a&gt;.
Specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;FPM supports three commands:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm build&lt;/code&gt;–compiles and links your application and/or library.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm test&lt;/code&gt;–runs tests if your package has any test programs.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fpm run&lt;/code&gt;–runs the application if your package has an executable program.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;FPM can build an executable program, a library, or a combination of both.&lt;/li&gt;
  &lt;li&gt;Currently only gfortran is supported as the compiler backend. FPM will suport other compilers soon.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Read the &lt;a href=&quot;https://github.com/fortran-lang/fpm/blob/master/PACKAGING.md&quot;&gt;FPM packaging guide&lt;/a&gt;
to learn how to build your package with FPM.&lt;/p&gt;

&lt;p&gt;FPM is still in very early development, and we need as much help as we can get.
Here’s how you can help today:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Try to use it. Does it work? No? Let us know!&lt;/li&gt;
  &lt;li&gt;Browse the &lt;a href=&quot;https://github.com/fortran-lang/fpm/issues&quot;&gt;open issues&lt;/a&gt; and see if you can help implement any fixes or features.&lt;/li&gt;
  &lt;li&gt;Adapt your Fortran package for FPM.&lt;/li&gt;
  &lt;li&gt;Improve the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The short term goal of FPM is to make development and installation of Fortran packages with dependencies easier.
Its long term goal is to build a rich and decentralized ecosystem of Fortran packages and create a healthy 
environment in which new open source Fortran projects are created and published with ease.&lt;/p&gt;

&lt;h2 id=&quot;wg5-convenor-candidates&quot;&gt;WG5 Convenor candidates&lt;/h2&gt;

&lt;p&gt;Last month was also the deadline for the &lt;a href=&quot;https://wg5-fortran.org/&quot;&gt;WG5&lt;/a&gt;
convenor candidates to apply for the next 3-year term (2021-2024).
There are two candidates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://stevelionel.com&quot;&gt;Steve Lionel&lt;/a&gt;, who is also the current WG5 convenor,
announced running for another term.
Read Steve’s &lt;a href=&quot;https://stevelionel.com/drfortran/2020/04/25/doctor-fortran-in-forward&quot;&gt;post&lt;/a&gt;
about how he has guided the standardization process over the past three years and his direction for the future.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://ondrejcertik.com&quot;&gt;Ondřej Čertík&lt;/a&gt; has also announced announced to run
for the WG5 convenor.
Read Ondřej’s &lt;a href=&quot;https://ondrejcertik.com/blog/2020/04/running-for-wg5-convenor-announcement/&quot;&gt;announcement&lt;/a&gt;
and &lt;a href=&quot;https://github.com/certik/wg5_platform_2020&quot;&gt;platform&lt;/a&gt;
that detail current issues with Fortran language development and how to
overcome them going forward.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;events&quot;&gt;Events&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://openteams.com&quot;&gt;OpenTeams&lt;/a&gt; and &lt;a href=&quot;https://quansight.com&quot;&gt;QuanSight&lt;/a&gt; hosted Ondřej Čertík and Milan Curcic
in the Episode 40 of the Open Source Directions Webinar.
They talked about the current state and future of Fortran, as well as about building the Fortran community and developer tools.
Read more about it and watch the video &lt;a href=&quot;/newsletter/2020/04/18/Fortran-Webinar/&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tcevents.chem.uzh.ch/event/12&quot;&gt;FortranCon 2020&lt;/a&gt; will take place on July 2-4 in Zurich, Switzerland.
Virtual participation is enabled for both attendees and speakers.
Registration is free and due by June 1, 2020.&lt;/li&gt;
  &lt;li&gt;J3/WG5 joint meeting will take place on October 12-16 in Las Vegas, Nevada.
You can submit a proposal for the Standards committee &lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals&quot;&gt;here&lt;/a&gt;.
For reference, you can read the &lt;a href=&quot;/newsletter/2020/02/28/J3-february-meeting&quot;&gt;notes from the February meeting&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;whos-hiring&quot;&gt;Who’s hiring?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://g.co/kgs/aogdeh&quot;&gt;Intel Corporation (Santa Clara, CA): Software Engineer, Fortran&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://g.co/kgs/5X3d2Y&quot;&gt;Intel Corporation (Hillsboro, OR): Software Engineer, Fortran&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://g.co/kgs/yuaohU&quot;&gt;Pozent (York, PA): Fortran Technical Lead&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://g.co/kgs/VAWjWk&quot;&gt;American Cybersystems, Inc. (Binghamton, NY): Software Engineer (Fortran, C/C++, Ada, C#, Java, Radar)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://g.co/kgs/eLsn63&quot;&gt;BravoTech (Dallas, TX): C++ / Fortran Developer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://g.co/kgs/eYftiA&quot;&gt;Siemens (Milford, OH): CAE Software Engineer (Fortran or C++) Design and Topology Optimization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </entry>
    
    <entry>
        <title>Open Source Directions Fortran webinar</title>
        <link href="https://fortran-lang.org/newsletter/2020/04/18/Fortran-Webinar/"/>
        <updated>2020-04-18T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/04/18/Fortran-Webinar</id>
        <content type="html">&lt;p&gt;Ondřej Čertík (&lt;a href=&quot;https://twitter.com/ondrejcertik&quot;&gt;@ondrejcertik&lt;/a&gt;) and 
Milan Curcic (&lt;a href=&quot;https://twitter.com/realmilancurcic&quot;&gt;@realmilancurcic&lt;/a&gt;) spoke 
yesterday about the future of Fortran in Episode 40 of the Open Source 
Directions Webinar.
We discussed the current state of the language, how it’s currently developed, 
and what we can do today to build the Fortran community, ecosystem of packages, 
and developer tools.&lt;/p&gt;

&lt;p&gt;Watch the episode now:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/2NiS2tdDO_4&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Special thanks to our hosts Melissa Mendonça 
(&lt;a href=&quot;https://twitter.com/melissawm&quot;&gt;@melissawm&lt;/a&gt;) and Madicken Munk 
(&lt;a href=&quot;https://twitter.com/munkium&quot;&gt;@munkium&lt;/a&gt;), as well as 
&lt;a href=&quot;https://openteams.com&quot;&gt;OpenTeams&lt;/a&gt; and &lt;a href=&quot;https://www.quansight.com/&quot;&gt;QuanSight&lt;/a&gt;
for having us.&lt;/p&gt;

&lt;p&gt;You can find all previous episodes of the Open Source Directions webinar 
&lt;a href=&quot;https://www.quansight.com/open-source-directions&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title>Announcing FortranCon 2020</title>
        <link href="https://fortran-lang.org/newsletter/2020/04/06/Announcing-FortranCon-2020/"/>
        <updated>2020-04-06T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/04/06/Announcing-FortranCon-2020</id>
        <content type="html">&lt;p&gt;FortranCon 2020, the first international conference targeting the Fortran
programming language, will take place on July 2-4, 2020, in Zürich, Switzerland.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;We&amp;#39;re happy to announce the (to our knowledge first) International &lt;a href=&quot;https://twitter.com/hashtag/Fortran?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#Fortran&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/Conference?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#Conference&lt;/a&gt; July 2.-4. at the &lt;a href=&quot;https://twitter.com/UZH_en?ref_src=twsrc%5Etfw&quot;&gt;@UZH_en&lt;/a&gt; in &lt;a href=&quot;https://twitter.com/hashtag/Zurich?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#Zurich&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/hashtag/Switzerland?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#Switzerland&lt;/a&gt; with &lt;a href=&quot;https://twitter.com/DoctorFortran?ref_src=twsrc%5Etfw&quot;&gt;@DoctorFortran&lt;/a&gt; joining as keynote speaker! Call for presentations is open: &lt;a href=&quot;https://t.co/LnyOZxHrZI&quot;&gt;https://t.co/LnyOZxHrZI&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/HPC?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#HPC&lt;/a&gt;&lt;/p&gt;&amp;mdash; tizianomueller (@tizianomueller) &lt;a href=&quot;https://twitter.com/tizianomueller/status/1247121616326348800?ref_src=twsrc%5Etfw&quot;&gt;April 6, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;FortranCon aims to bring together developers of Fortran libraries, 
applications, and language itself to share their experience and ideas.
The conference is organized in two full days of speaker presentations 
on July 2 and 3, and a half-day workshop with lectures and hands-on sessions
on July 4.
Click &lt;a href=&quot;https://tcevents.chem.uzh.ch/event/12/abstracts/&quot;&gt;here&lt;/a&gt; to submit
an abstract.&lt;/p&gt;

&lt;p&gt;The keynote presentation will be delivered by Steve Lionel 
(&lt;a href=&quot;https://twitter.com/doctorfortran&quot;&gt;@doctorfortran&lt;/a&gt;), convener of the 
US Fortran Standards Committee.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://tcevents.chem.uzh.ch/event/12/registrations/&quot;&gt;registration&lt;/a&gt; 
is &lt;strong&gt;free of charge&lt;/strong&gt;, with June 1, 2020 as the deadline.
Virtual participation will be enabled for speakers and attendees unable to 
travel.&lt;/p&gt;

&lt;p&gt;Read more about FortranCon 2020 &lt;a href=&quot;https://tcevents.chem.uzh.ch/event/12/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title>J3 February 2020 Meeting</title>
        <link href="https://fortran-lang.org/newsletter/2020/02/28/J3-february-meeting/"/>
        <updated>2020-02-28T00:00:00+00:00</updated>
        <id>/news/newsletter/2020/02/28/J3-february-meeting</id>
        <content type="html">&lt;p&gt;The J3 Fortran Committee meeting took place in Las Vegas, NV, on February 24-28,
2020.&lt;/p&gt;

&lt;h2 id=&quot;attendance&quot;&gt;Attendance&lt;/h2&gt;

&lt;p&gt;The following people / companies attended:&lt;/p&gt;

&lt;p&gt;Voting members:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Intel: Jon Steidel&lt;/li&gt;
  &lt;li&gt;HPE/Cray: Bill Long&lt;/li&gt;
  &lt;li&gt;NVIDIA: Peter Klausler, Gary Klimowicz&lt;/li&gt;
  &lt;li&gt;IBM: Daniel Chen&lt;/li&gt;
  &lt;li&gt;ARM: Srinath Vadlamani&lt;/li&gt;
  &lt;li&gt;NCAR: Dan Nagle, Magne Haveraaen&lt;/li&gt;
  &lt;li&gt;NASA: Tom Clune&lt;/li&gt;
  &lt;li&gt;JPL: Van Sneider&lt;/li&gt;
  &lt;li&gt;LANL: Zach Jibben, Ondřej Čertík&lt;/li&gt;
  &lt;li&gt;ORNL: Reuben Budiardja&lt;/li&gt;
  &lt;li&gt;LBNL: Brian Friesen&lt;/li&gt;
  &lt;li&gt;Sandia: Damian Rouson&lt;/li&gt;
  &lt;li&gt;Lionel: Steven Lionel, Malcolm Cohen, Vipul Parekh&lt;/li&gt;
  &lt;li&gt;Corbett: Bob Corbett&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Others:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;AMD: Richard Bleikamp&lt;/li&gt;
  &lt;li&gt;WG23: Stephen Michell (convenor), Erhard Ploedereder (member)&lt;/li&gt;
  &lt;li&gt;Structural Integrity: Brad Richardson&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;proposals-discussed-at-plenary&quot;&gt;Proposals Discussed at Plenary&lt;/h2&gt;

&lt;h3 id=&quot;monday-224&quot;&gt;Monday 2/24&lt;/h3&gt;

&lt;h3 id=&quot;tuesday-225&quot;&gt;Tuesday 2/25&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/22&quot;&gt;#22&lt;/a&gt; : Default values of optional arguments (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-107.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-107.txt&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;wednesday-226&quot;&gt;Wednesday 2/26&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/157&quot;&gt;#157&lt;/a&gt; : Rank-agnostic array element and section denotation (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-113.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-113.txt&lt;/a&gt;, &lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-115.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-115.txt&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/158&quot;&gt;#158&lt;/a&gt; : TYPEOF and CLASSOF (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-114.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-114.txt&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/1&quot;&gt;#1&lt;/a&gt; : Namespace for modules (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-108.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-108.txt&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Interpretation: FORM TEAM and failed images (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-102r1.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-102r1.txt&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Interpretation: Collective subroutines and STAT= (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-104r1.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-104r1.txt&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;thursday-227&quot;&gt;Thursday 2/27&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Interpretation: events that cause variables to become undefined (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-119.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-119.txt&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Edits for SIMPLE procedures (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-116.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-116.txt&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;BFLOAT16 (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-118.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-118.txt&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/146&quot;&gt;#146&lt;/a&gt; : Interpretation: allocatable component finalization (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-117.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-117.txt&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;friday-228&quot;&gt;Friday 2/28&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/157&quot;&gt;#157&lt;/a&gt; : Rank-agnostic syntax (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-120.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-120.txt&lt;/a&gt;). Passed unanimously with minor changes.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/156&quot;&gt;#156&lt;/a&gt; : Protected components (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-121.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-121.txt&lt;/a&gt;). Withdrawn to address conflicting interests.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/160&quot;&gt;#160&lt;/a&gt; : Edits for auto-allocate characters (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-122.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-122.txt&lt;/a&gt;). Passed unanimously with minor changes.&lt;/li&gt;
  &lt;li&gt;Edits for procedure pointer association (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-123.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-123.txt&lt;/a&gt;). Passed unanimously.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/157&quot;&gt;#157&lt;/a&gt; : Edits for rank-agnostic bounds (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-124.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-124.txt&lt;/a&gt;). Withdrawn because some edits were missing and need to be added. There were concerns about fitting into the framework of generics later on.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/157&quot;&gt;#157&lt;/a&gt; : Edits for rank-agnostic array element and section denotation (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-125.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-125.txt&lt;/a&gt;). Failed (5 v 7). Missing edits, and disagreement on types vs rank-1 integers, the options need to be explored more.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/157&quot;&gt;#157&lt;/a&gt; : Edits for rank-agnostic allocation and pointer assignment (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-126.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-126.txt&lt;/a&gt;). Passed unanimously with minor changes.&lt;/li&gt;
  &lt;li&gt;Interpretation: Public namelist and private variable (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-127.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-127.txt&lt;/a&gt;). Straw vote (0 yes, 8 no, 9 undecided). Passed unanimously with “no” alternative.&lt;/li&gt;
  &lt;li&gt;Interpretation F18/015 (&lt;a href=&quot;https://j3-fortran.org/doc/year/20/20-105.txt&quot;&gt;https://j3-fortran.org/doc/year/20/20-105.txt&lt;/a&gt;). Passed unanimously.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;skipped&quot;&gt;Skipped&lt;/h2&gt;

&lt;p&gt;This was on the plan but we did not get to it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/5&quot;&gt;#5&lt;/a&gt; : US 27 POINTER dummy arguments, INTENT, and target modification (&lt;a href=&quot;https://j3-fortran.org/doc/year/18/18-144r1.txt&quot;&gt;https://j3-fortran.org/doc/year/18/18-144r1.txt&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/19&quot;&gt;#19&lt;/a&gt; : Short-circuiting proposal&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;more-details&quot;&gt;More Details&lt;/h2&gt;

&lt;p&gt;More details available at
&lt;a href=&quot;https://github.com/j3-fortran/fortran_proposals/issues/155&quot;&gt;j3-fortran/fortran_proposals #155&lt;/a&gt; and at the official &lt;a href=&quot;https://j3-fortran.org/doc/year/20/minutes221.txt&quot;&gt;minutes&lt;/a&gt; from the meeting.&lt;/p&gt;

</content>
    </entry>
    

</feed>
